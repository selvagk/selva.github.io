'use strict';(function(h,d){"object"===typeof exports&&"undefined"!==typeof module?d(exports,require("three")):"function"===typeof define&&define.amd?define(["exports","three"],d):(h=h||self,d(h.troika_three_utils={},h.THREE))})(this,function(h,d){function r(a){return a.replace(/^[ \t]*#include +<([\w\d./]+)>/gm,function(a,c){return(c=d.ShaderChunk[c])?r(c):a})}function t(a,b){function c(c){a.onBeforeCompile.call(this,c);var e=this[h]||(this[h]={vertex:{},fragment:{}}),f=e.vertex;e=e.fragment;if(f.source!==
c.vertexShader||e.source!==c.fragmentShader){var d=A(c,b,n);f.source=c.vertexShader;f.result=d.vertexShader;e.source=c.fragmentShader;e.result=d.fragmentShader}c.vertexShader=f.result;c.fragmentShader=e.result;k(c.uniforms,this.uniforms);b.timeUniform&&(c.uniforms[b.timeUniform]={get value(){return Date.now()-B}});if(this[g])this[g](c)}function e(){a.constructor.apply(this,arguments);this._listeners=void 0}var f=JSON.stringify(b,C),p=w.get(a);p||(p=Object.create(null),w.set(a,p));if(p[f])return p[f].clone();
var n=++D,h="_derivedShaders"+n,g="_onBeforeCompile"+n,l,u;e.prototype=Object.create(a,{constructor:{value:e},isDerivedMaterial:{value:!0},baseMaterial:{value:a},onBeforeCompile:{get:function(){return c},set:function(a){this[g]=a}},copy:{value:function(b){a.copy.call(this,b);a.isShaderMaterial||a.isDerivedMaterial||(this.extensions=k({},b.extensions),this.defines=k({},b.defines),this.uniforms=d.UniformsUtils.clone(b.uniforms));return this}},getDepthMaterial:{value:function(){var c=this._depthMaterial;
c||(u||(u=t(a.isDerivedMaterial?a.getDepthMaterial():new d.MeshDepthMaterial({depthPacking:d.RGBADepthPacking}),b),u.defines.IS_DEPTH_MATERIAL=""),c=this._depthMaterial=u.clone());return c}},getDistanceMaterial:{value:function(){var c=this._distanceMaterial;c||(l||(l=t(a.isDerivedMaterial?a.getDistanceMaterial():new d.MeshDistanceMaterial,b),l.defines.IS_DISTANCE_MATERIAL=""),c=this._distanceMaterial=l.clone());return c}},dispose:{value:function(){var b=this._depthMaterial,c=this._distanceMaterial;
b&&b.dispose();c&&c.dispose();a.dispose.call(this)}}});var m=new e;m.copy(a);m.uniforms=k(d.UniformsUtils.clone(a.uniforms||{}),b.uniforms);m.defines=k({},a.defines,b.defines);m.defines.TROIKA_DERIVED_MATERIAL=n;m.extensions=k({},a.extensions,b.extensions);p[f]=m;return m.clone()}function A(a,b,c){var e=a.vertexShader;a=a.fragmentShader;var f=b.vertexDefs,d=b.vertexMainIntro,h=b.vertexTransform,g=b.fragmentDefs,k=b.fragmentMainIntro,l=b.fragmentColorTransform;if(b=b.timeUniform)b="\nuniform float "+
b+";\n",f=(f||"")+b,g=(g||"")+b;if(f||d||h)h&&(e=r(e),f=(f||"")+"\nvoid troikaVertexTransform"+c+"(inout vec3 position, inout vec3 normal, inout vec2 uv) {\n  "+h+"\n}\n",e=e.replace(/\b(position|normal|uv)\b/g,function(a,b,e,f){return/\battribute\s+vec[23]\s+$/.test(f.substr(0,e))?b:"troika_"+b+"_"+c}),d="\nvec3 troika_position_"+c+" = vec3(position);\nvec3 troika_normal_"+c+" = vec3(normal);\nvec2 troika_uv_"+c+" = vec2(uv);\ntroikaVertexTransform"+c+"(troika_position_"+c+", troika_normal_"+c+", troika_uv_"+
c+");\n"+(d||"")+"\n"),e=e.replace(v,(f||"")+"\n\n$&\n\n"+(d||""));if(g||k||l)a=r(a),a=a.replace(v,"\n"+(g||"")+"\nvoid troikaOrigMain"+c+"() {\n"+(k||"")+"\n"),a+="\nvoid main() {\n  troikaOrigMain"+c+"();\n  "+(l||"")+"\n}";return{vertexShader:e,fragmentShader:a}}function C(a,b){return"uniforms"===a?void 0:b}function x(a,b,c){a*=255;var e=a%1*255,f=e%1*255;var d=Math.round(f%1*255)&255;b[c]=a&255;b[c+1]=e&255;b[c+2]=f&255;b[c+3]=d;return b}var v=/\bvoid\s+main\s*\(\s*\)\s*{/g,k=Object.assign||function(){for(var a=
arguments,b=arguments[0],c=1,e=arguments.length;c<e;c++){var f=a[c];if(f)for(var d in f)f.hasOwnProperty(d)&&(b[d]=f[d])}return b},D=0,B=Date.now(),w=new WeakMap,E={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",
PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},g=function(a){this.name=a;this.textureUniform="dataTex_"+a;this.textureSizeUniform="dataTexSize_"+a;this.multiplierUniform="dataMultiplier_"+a;this.dataSizeUniform="dataSize_"+a;this.readFunction="readData_"+a;this._raw=new Float32Array(0);this._texture=new d.DataTexture(new Uint8Array(0),0,1);this._length=0;this._multiplier=1},q={length:{configurable:!0}};q.length.set=function(a){if(a!==this._length){var b=Math.pow(2,Math.ceil(Math.log2(a))),
c=this._raw;b<c.length?this._raw=c.subarray(0,b):b>c.length&&(this._raw=new Float32Array(b),this._raw.set(c));this._length=a}};q.length.get=function(){return this._length};g.prototype.push=function(a){return this.set(this.length++,a)};g.prototype.setArray=function(a){this.length=a.length;this._raw.set(a);this._needsRepack=!0};g.prototype.get=function(a){return this._raw[a]};g.prototype.set=function(a,b){a+1>this._length&&(this.length=a+1);b!==this._raw[a]&&(this._raw[a]=b,x(b/this._multiplier,this._texture.image.data,
4*a),this._needsMultCheck=!0)};g.prototype.clone=function(){var a=new g(this.name);a.setArray(this._raw);return a};g.prototype.getShaderUniforms=function(){var a,b=this;return a={},a[this.textureUniform]={get value(){b._sync();return b._texture}},a[this.textureSizeUniform]={get value(){b._sync();return b._texture.image.width}},a[this.dataSizeUniform]={get value(){b._sync();return b.length}},a[this.multiplierUniform]={get value(){b._sync();return b._multiplier}},a};g.prototype.getShaderHeaderCode=
function(){var a=this.textureUniform,b=this.textureSizeUniform,c=this.multiplierUniform;return"\nuniform sampler2D "+a+";\nuniform float "+b+";\nuniform float "+this.dataSizeUniform+";\nuniform float "+c+";\n\nfloat "+this.readFunction+"(float index) {\n  vec2 texUV = vec2((index + 0.5) / "+b+", 0.5);\n  vec4 pixel = texture2D("+a+", texUV);\n  return dot(pixel, 1.0 / vec4(1.0, 255.0, 65025.0, 16581375.0)) * "+c+";\n}\n"};g.prototype._sync=function(){var a=this._texture,b=this._raw,c=this._needsRepack;
b.length!==a.image.width&&(a.image={data:new Uint8Array(4*b.length),width:b.length,height:1},c=!0);if(c||this._needsMultCheck){var e=this._raw.reduce(function(a,b){return Math.max(a,b)},0);e=Math.pow(2,Math.ceil(Math.log2(e)));e!==this._multiplier&&(this._multiplier=e,c=!0);a.needsUpdate=!0;this._needsMultCheck=!1}if(c){c=0;e=b.length;for(var d=this._multiplier;c<e;c++)x(b[c]/d,a.image.data,4*c);this._needsRepack=!1}};Object.defineProperties(g.prototype,q);var y=null,z=new d.MeshStandardMaterial({color:16777215,
side:d.DoubleSide});q=function(a){function b(){a.call(this,y||(y=(new d.CylinderBufferGeometry(1,1,1,6,64)).translate(0,.5,0)),z);this.pointA=new d.Vector3;this.controlA=new d.Vector3;this.controlB=new d.Vector3;this.pointB=new d.Vector3;this.radius=.01;this.dashArray=new d.Vector2;this.dashOffset=0;this.frustumCulled=!1}a&&(b.__proto__=a);b.prototype=Object.create(a&&a.prototype);b.prototype.constructor=b;var c={material:{configurable:!0},customDepthMaterial:{configurable:!0},customDistanceMaterial:{configurable:!0}};
c.material.get=function(){var a=this._derivedMaterial,b=this._baseMaterial||z;a&&a.baseMaterial===b||(a&&a.dispose(),a=this._derivedMaterial=t(b,{uniforms:{pointA:{value:new d.Vector3},controlA:{value:new d.Vector3},controlB:{value:new d.Vector3},pointB:{value:new d.Vector3},radius:{value:.01},dashing:{value:new d.Vector3}},vertexDefs:"\nuniform vec3 pointA;\nuniform vec3 controlA;\nuniform vec3 controlB;\nuniform vec3 pointB;\nuniform float radius;\nvarying float bezierT;\n\nvec3 cubicBezier(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\n  float t2 = 1.0 - t;\n  float b0 = t2 * t2 * t2;\n  float b1 = 3.0 * t * t2 * t2;\n  float b2 = 3.0 * t * t * t2;\n  float b3 = t * t * t;\n  return b0 * p1 + b1 * c1 + b2 * c2 + b3 * p2;\n}\n\nvec3 cubicBezierDerivative(vec3 p1, vec3 c1, vec3 c2, vec3 p2, float t) {\n  float t2 = 1.0 - t;\n  return -3.0 * p1 * t2 * t2 +\n    c1 * (3.0 * t2 * t2 - 6.0 * t2 * t) +\n    c2 * (6.0 * t2 * t - 3.0 * t * t) +\n    3.0 * p2 * t * t;\n}\n",
vertexTransform:'\nfloat t = position.y;\nbezierT = t;\nvec3 bezierCenterPos = cubicBezier(pointA, controlA, controlB, pointB, t);\nvec3 bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t));\n\n// Make "sideways" always perpendicular to the camera ray; this ensures that any twists\n// in the cylinder occur where you won\'t see them: \nvec3 viewDirection = normalMatrix * vec3(0.0, 0.0, 1.0);\nif (bezierDir == viewDirection) {\n  bezierDir = normalize(cubicBezierDerivative(pointA, controlA, controlB, pointB, t == 1.0 ? t - 0.0001 : t + 0.0001));\n}\nvec3 sideways = normalize(cross(bezierDir, viewDirection));\nvec3 upish = normalize(cross(sideways, bezierDir));\n\n// Build a matrix for transforming this disc in the cylinder:\nmat4 discTx;\ndiscTx[0].xyz = sideways * radius;\ndiscTx[1].xyz = bezierDir * radius;\ndiscTx[2].xyz = upish * radius;\ndiscTx[3].xyz = bezierCenterPos;\ndiscTx[3][3] = 1.0;\n\n// Apply transform, ignoring original y\nposition = (discTx * vec4(position.x, 0.0, position.z, 1.0)).xyz;\nnormal = normalize(mat3(discTx) * normal);\n',
fragmentDefs:"\nuniform vec3 dashing;\nvarying float bezierT;\n",fragmentMainIntro:"\nif (dashing.x + dashing.y > 0.0) {\n  float dashFrac = mod(bezierT - dashing.z, dashing.x + dashing.y);\n  if (dashFrac > dashing.x) {\n    discard;\n  }\n}\n"}),b.addEventListener("dispose",function n(){b.removeEventListener("dispose",n);a.dispose()}));return a};c.material.set=function(a){this._baseMaterial=a};c.customDepthMaterial.get=function(){return this._updateBezierUniforms(this.material.getDepthMaterial())};
c.customDistanceMaterial.get=function(){return this._updateBezierUniforms(this.material.getDistanceMaterial())};b.prototype.onBeforeRender=function(a){this._updateBezierUniforms(this.material)};b.prototype._updateBezierUniforms=function(a){var b=a.uniforms,c=this.controlA,d=this.controlB,e=this.pointB,h=this.radius,g=this.dashArray,k=this.dashOffset;b.pointA.value.copy(this.pointA);b.controlA.value.copy(c);b.controlB.value.copy(d);b.pointB.value.copy(e);b.radius.value=h;b.dashing.value.set(g.x,g.y,
k||0);return a};b.prototype.raycast=function(a,b){};Object.defineProperties(b.prototype,c);return b}(d.Mesh);h.BezierMesh=q;h.ShaderFloatArray=g;h.createDerivedMaterial=t;h.expandShaderIncludes=r;h.getShaderUniformTypes=function(a){for(var b=/\buniform\s+(int|float|vec[234])\s+([A-Za-z_][\w]*)/g,c=Object.create(null),d;null!==(d=b.exec(a));)c[d[2]]=d[1];return c};h.getShadersForMaterial=function(a){var b=E[a.type];return b?d.ShaderLib[b]:a};h.voidMainRegExp=v;Object.defineProperty(h,"__esModule",
{value:!0})});
